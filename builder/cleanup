#!/usr/bin/perl

# clojure
remove("lein");

# dart
remove("dart:stable");
remove("dart:dev");

# dlang
remove("dmd:2.064.2");

# rlang
remove("rlang:rlang");

# erlang
remove("erlang:R16B02");
remove("erlang:R16B01");
remove("erlang:R16B");
remove("erlang:R15B");
remove("kerl");

# gcc
remove("gcc:4.6");
remove("gcc:4.8");

# golang
remove("go:1.2");
remove("go:1.1");
remove("go:1.0");

# groovy
skip("groovy");

# haskell
remove("haskell:7.4");

# java
remove("java:openjdk6");
remove("java:openjdk7");
remove("java:oraclejdk7");
remove("java:oraclejdk8");
skip("java:android");

# node
remove("node:iojs");
remove("node:0.12");
remove("node:0.10");
remove("node:0.8");
remove("nvm");

# php
remove("php:5.4");
remove("php:5.5");
remove("phpenv");

# python
remove("python:2.7");
remove("python:3.2");
remove("python:3.3");
remove("python:3.4");
remove("python:pypy");
remove("virtualenv");

# ruby
remove("ruby:1.9.3");
remove("ruby:2.0.0");
remove("ruby:2.1.0");
remove("ruby:2.1.1");
remove("jruby:1.7.11-openjdk6");
remove("jruby:1.7.11-openjdk7");
remove("rbenv");

# scala
remove("scala:2.10.3");
remove("scala:2.9.3");

# base
skip("base");

# function to remove Docker images and print out
# the result. If image removal fails, we'll print
# out the stderr.
sub remove {
	$name=$_[0];

	@result = `docker rmi bradrydzewski/$name 2>&1`;
	if ( $? == 0 )
	{
		print "\033[32m ✓ REMOVED\033[0m $name\n";
	}
	else
	{
		print "\033[31m ✗ FAILURE\033[0m $name\n";
	}
}

sub skip {
	$name=$_[0];
	print "\033[33m – SKIPPED\033[0m $name\n";
}
